stages:
  - Test
  - Deploy
  - Update

Test:
  stage: Test
  image: golang
  script: make test

Deploy:
  stage: Deploy
  image: docker:latest
  only:
    - master
  services:
    - docker:19-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
  script:
    - docker build .
      --cache-from $CI_REGISTRY_IMAGE:latest
      --build-arg API_URL=$API_URL
      -t $CI_REGISTRY_IMAGE:latest
      -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
    - docker push $CI_REGISTRY_IMAGE --all-tags

Release:
  stage: Deploy
  image: docker:latest
  only:
    - tags
  except:
    - branches
  services:
    - docker:19-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
  script:
    - docker build .
      --cache-from $CI_REGISTRY_IMAGE:latest
      --build-arg API_URL=$API_URL
      -t $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}
    - docker push $CI_REGISTRY_IMAGE --all-tags
