stages:
  - Deploy
  - Update

Deploy:
  stage: Deploy
  image: docker:latest
  only:
    - master
  services:
    - docker:19-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
  script:
    - docker build .
      --cache-from $CI_REGISTRY_IMAGE:latest
      --build-arg API_URL=$API_URL
      -t $CI_REGISTRY_IMAGE:latest
      -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
    - docker push $CI_REGISTRY_IMAGE --all-tags

Kubernetes update:
  stage: Update
  image: dtzar/helm-kubectl
  dependencies:
    - Deploy
  script:
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --namespace=default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl set image deployments/crawling -n prod-v1 batchable=$CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}